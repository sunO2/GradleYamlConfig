/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.hezhihu89.config

import com.android.build.gradle.AppExtension
import com.android.build.gradle.internal.dsl.BaseAppModuleExtension
import com.hezhihu89.config.ReadYamlTask.Companion.TASK_GROUP
import com.hezhihu89.module.APPConfig
import com.hezhihu89.module.App
import com.hezhihu89.utils.YLog.log
import com.hezhihu89.utils.YamlUtils
import org.gradle.api.*
import org.gradle.api.tasks.TaskAction

/**
 * A simple 'hello world' plugin.
 */
class YamlConfigPlugin: Plugin<Project> {

    override fun apply(project: Project) {
        // Register a task
        val appConfig = YamlUtils.getAppConfig(project)
        project.extensions.add(App::class.java,"app",appConfig)
        project.extensions.add(APPConfig::class.java,"appConfig",appConfig.app)
        project.tasks.create("readYaml",ReadYamlTask::class.java){
            it.group = TASK_GROUP
            it.description = "用于适配task"
            project.tasks.getByName("prepareKotlinBuildScriptModel").dependsOn(it)
        }
        project.childProjects.forEach {
            val childProject = it.value
            childProject.extensions.add(APPConfig::class.java, "appConfig", appConfig.app)
            childProject.plugins.apply("com.hezhihu89.yamlTest")
        }
    }
}




open class ReadYamlTask: DefaultTask() {

    companion object {
        const val TASK_GROUP = "yaml config"
    }

    init {
        doFirst {
            log.d("doFirst","ReadYamlTask")
        }

        doLast {
            log.d("doLast","ReadYamlTask")
        }

    }

    @TaskAction
    fun doAction(){
        log.d("doActions： ","ReadYamlTask")
    }

}
